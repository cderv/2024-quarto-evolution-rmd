{
  "hash": "4593937af2a8f28cdf9823bff063a4c2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quarto: </br>Pour des travaux scientifiques reproductible\"\nsubtitle: \"Une évolution de R Markdown\"\nauthor: \"Christophe Dervieux\"\ninstitute: \"Posit PBC\"\ndate: 02/05/2024\nlang: fr\nformat:\n  clean-revealjs:\n    theme: [default, reveal-style.scss]\n    footer: A suivre sur <https://cderv.github.io/2024-quarto-evolution-rmd/> et <https://quarto.org>\n    code-line-numbers: false\n    slide-number: true\n    mermaid-format: png\n    preview-links: auto\n    multiplex: true\nrevealjs-plugins:\n  - attribution\nexecute: \n  cache: true\n---\n\n\n\n# Qu'est-ce que Quarto ?\n\n*Quarto est la nouvelle génération de R Markdown.\nIl unifie et étend **rmarkdown**, le {{< iconify noto package >}} {{< iconify fa-brands r-project >}} et son écosytème.*\n\n## Quarto ...\n\n...est un nouveau système de publication scientifique et technique à code source ouvert ([MIT](https://deploy-preview-1093--mystifying-jepsen-fa4396.netlify.app/license.html)).\n\n- Edition: Markdown via [Pandoc](https://pandoc.org) avec de nombreuses améliorations\n- Programmation : Python, R, Julia, Observable JS, ...\n- Publication : Documents, présentations, sites web, livres, ...\n\n![[Illustration de la présentation \"Hello, Quarto\" de Julia Lowndes et Mine Çetinkaya-Rundel, présentée lors de la conférence RStudio 2022. Illustré par Allison  Horst.]{.small-cap}](images/horst_quarto_schematic.png){fig-alt=\"Un schéma représentant la polyvalence de Quarto en matière d'entrée multilingue (par exemple Python, R, Observable, Julia) et de sortie multiformat (par exemple PDF, html, documents Word, et plus encore).\" fig-align=\"center\"}\n\n## Avec Quarto...\n\n... vous pouvez \"tisser\" ensemble du texte narratif et du code pour produire des publications au formats (HTML, PDF, DOCX, ...) et formes multiples (documents, pages Web, billets de blog, livres et bien plus encore.\n\n. . .\n\n*comme R Markdown...*\n\n. . .\n\nmais pas *juste comme*, car il y a plus que ça...\n\n## Quarto ... {.center auto-animate=\"true\"}\n\n**unifie** + **étend** l'écosystème R Markdown\n\n## Quarto ... {.center auto-animate=\"true\"}\n\n**unifie** + **étend** l'écosystème R Markdown\n\n**unifie** pour les connaisseurs de R Markdown\n\n## Quarto ... {.center auto-animate=\"true\"}\n\n**unifie** + **étend** l'écosystème R Markdown\n\n**unifie** pour les connaisseurs de R Markdown\n\n**étend** pour les personnes qui ne connaissent pas R Markdown\n\n## Quarto unifies + extends R Markdown {visibility=\"hidden\"}\n\n::: incremental\n- Fonctionnalités attrayantes et pratiques dans toutes les sorties : onglets, coloration syntaxique du code, etc.\n- Des valeurs par défaut plus accessibles et une meilleure prise en charge de l'accessibilité\n- Des garde-fous, particulièrement utiles pour les nouveaux apprenants : Complétion YAML, informations sur les erreurs de syntaxe, etc.\n- Support d'autres langages comme Python, Julia, Observable, et plus encore via le moteur Jupyter pour les exécutions des cellules de code.\n:::\n\n# Pourquoi Quarto ?\n\nUn peu d'histoire\n\n## Les origines\n\n- Projet open source sponsorisé par Posit, PBC.\n- 10 ans d'expérience avec R Markdown ont convaincus que les idées de base étaient solides.\n- Le nombre de langages et de moteurs d'exécution utilisés pour le discours scientifique est très large.\n- Quarto est une réimagination de R Markdown qui est fondamentalement multi languages de programmation et multi moteurs de calculs.\n\n## Objectif: Publication avec données calculées\n\n::: columns\n::: {.column width=\"60%\"}\n![](images/nature-reproducibility.png){.lightbox}\n:::\n\n::: {.column width=\"40%\"}\n- Documents qui intègrent le code source nécessaire à leur production\n- \"_Notebook_\" ou texte brut\n- Automatisation et reproductibilité\n:::\n:::\n\n::: {.attribution}\n[Issue de _Nature_, [\"1,500 scientists lift the lid on reproducibility\"](https://www.nature.com/articles/533452a) ]{.make-smaller}\n:::\n\n## Objectif: Markdown pour la publication scientifique\n\n![](images/scientific-markdown-cropped.png){.center}\n\n::: {.notes}\nSimplifier l'utilisation de markdown pour le scientifique. Aujourd'hui une bonne alternative mais trop complexe trop vite\n:::\n\n## Objectif : Une source unique pour la publication\n\n<https://coko.foundation/articles/single-source-publishing.html>\n\n![](images/single-source-publishing.jpg)\n\n## Alors, pourquoi un nouveau système ?\n\n- Le [nombre de langages et de moteurs d'exécution utilisés pour le discours scientifique est très large]{.hl} (et l'écosystème Jupyter en particulier est extraordinairement populaire).\n- Quarto est à la base [multi-languages et multi-exécution]{.hl} (supportant Knitr, Jupyter, et Observable aujourd'hui et potentiellement d'autres moteurs demain).\n- D'un autre côté, [R Markdown est fortement lié à R]{.hl} ce qui limite le nombre de personnes qui peuvent en bénéficier.\n- Quarto est la tentative de Posit d'apporter 10 ans d'expérience de [R Markdown à tous]{.hl} !\n\n# Comment utiliser Quarto ?\n\n*Ce n'est pas un package R comme R Markdown...*\n\n## Une nouvelle fois : Qu'est-ce que Quarto ? {.smaller}\n\nQuarto est une interface de ligne de commande (CLI) qui transforme les formats de texte brut (`.qmd`, `.rmd`, `.md`) **OU** les formats mixtes (`.ipynb`/Jupyter notebook) en rapports statiques PDF/Word/HTML, livres, sites web, présentations et plus encore.\n\n```{.bash code-line-numbers=\"|1|4|12|17|18|19-34\"}\n$ quarto --help\n\n  Usage:   quarto\n  Version: 1.4.553\n\n  Description:\n\n    Quarto CLI\n\n  Options:\n\n    -h, --help     - Show this help.\n    -V, --version  - Show the version number for this program.\n\n  Commands:\n\n    render     [input] [args...]     - Render files or projects to various document types.\n    preview    [file] [args...]      - Render and preview a document or website project.\n    serve      [input]               - Serve a Shiny interactive document.\n    create     [type] [commands...]  - Create a Quarto project or extension\n    use        <type> [target]       - Automate document or project setup tasks.\n    add        <extension>           - Add an extension to this folder or project\n    update     [target...]           - Updates an extension or global dependency.\n    remove     [target...]           - Removes an extension.\n    convert    <input>               - Convert documents to alternate representations.\n    pandoc     [args...]             - Run the version of Pandoc embedded within Quarto.\n    typst      [args...]             - Run the version of Typst embedded within Quarto.\n    run        [script] [args...]    - Run a TypeScript, R, Python, or Lua script.\n    install    [target...]           - Installs a global dependency (TinyTex or Chromium).\n    uninstall  [tool]                - Removes an extension.\n    tools                            - Display the status of Quarto installed dependencies\n    publish    [provider] [path]     - Publish a document or project to a provider.\n    check      [target]              - Verify correct functioning of Quarto installation.\n    help       [command]             - Show this help or the help of a sub-command.\n```\n\n::: {.footer}\n:::\n\n# Moteurs de calculs disponibles\n\n- Knitr\n- Jupyter\n- Observable JS\n- Julia [(en test dans v1.5 Pre release seulement)]{.make-smaller}\n- Others possible...\n\n## Knitr {.nostretch .smaller}\n\n![](images/rstudio-qmd-how-it-works.png)\n\nPour R, Quarto utilise toujours Knitr sous le capot. Par conséquent, ***la grande majorité des fichiers Rmd existants*** peuvent être rendus avec Quarto sans modification.\n\nLa syntaxe standard des options de blocs a changé:\n\n```{{r}}\n#| echo: false\n#| fig-cap: \"Cars\"\nplot(cars)\n```\n\n## Knitr\n\n![](images/knitr-engine.png)\n\n## Jupyter --- ipynb {.nostretch .smaller}\n\n![](images/qmd-how-it-works.png)\n\nLe moteur Jupyter prend en charge l'utilisation de Python, Julia, R et de tout autre langage doté d'un noyau Jupyter.\n\nJupyter supporte deux formats de fichiers d'entrée :\n\n- Carnets de notes traditionnels (`.ipynb`)\n- Markdown avec morceaux (`.qmd`)\n\nHello Jupyter: <https://quarto.org/#hello-quarto>\n\n::: {.notes}\nex: Kernel multi-language\n:::\n\n## Jupyter --- ipynb {.nostretch}\n\nVous pouvez également transformer les notebooks Jupyter (fichiers `.ipynb`) directement. A noter: aucune exécution n'a lieu par défaut.\n\n![](images/ipynb-how-it-works.png)\n\n::: {.notes}\nLes notebooks conservent l'éxécution et Quarto va par défaut respecter cela\n:::\n\n##  {visibility=\"hidden\" background-image=\"images/screenshot-jupyter-engine.png\"}\n\n::: {.footer}\n:::\n\n## Jupyter: Les outils\n\nAperçu côte à côte pour JupyterLab, VS Code, Emacs, etc :\n\n```{.bash}\n$ quarto preview notebook.ipynb\n```\n\n![](images/jupyterlab-preview.png){.lightbox width=\"70%\" fig-align=\"center\"}\n\n::: {.footer}\n:::\n\n## Observable JS\n\nQuarto inclut un support natif pour Observable JS, un ensemble d'améliorations apportées au JavaScript vanille créé par [Mike Bostock](https://en.wikipedia.org/wiki/Mike_Bostock) (également auteur de [D3](https://d3js.org/)).\n\nObservable JS se distingue par son temps d'exécution réactif, particulièrement adapté à l'exploration et à l'analyse interactives des données.\n\nDemo: <https://quarto.org/docs/interactive/ojs/#example>\n\n##  {background-image=\"images/screenshot-ojs.png\"}\n\n::: {.footer}\n:::\n\n# Les formats Quarto\n\nComme R Markdown, on peut produire différents formats de documents.\n\n## De multiples formats...\n\n:::: columns\n::: {.column width=\"33%\"}\n* `format: html`\n* `format: pdf`\n* `format: typst`\n:::\n::: {.column width=\"33%\"}\n* `format: docx`\n* `format: pptx`\n* `format: revealjs`\n:::\n::: {.column width=\"33%\"}\n* `format: gfm`\n* ...\n:::\n::::\n\n```yaml\nformat: \n  html:\n    code-fold: true\n  pdf:\n    lof: true #<1>\ntoc: true #<2>\n```\n1. `lof` = _List Of Figures_\n2. Exemple d'option commune aux formats HTML et PDF\n\n::: {.footer}\n:::\n\n## ...basée sur Pandoc \n\n## {background-video=\"images/quarto-all-formats.mp4\" background-video-loop=true background-video-muted=true}\n\n::: {.footer}\n:::\n\n# Une syntaxe commune coté source\n\nLes fonctionnalités essentielles sont exprimées de la même manière dans tous les formats :\n\n- Pliage du code en HTML (_code folding_)\n\n- Onglets\n\n- Thèmes pour le style\n\n## Unification par rapport à R Markdown {.smaller .inherit-ul}\n\nL'écosystème R Markdown a été construit sur près d'une décennie - ce qui a entraîné de nombreuses incohérences et duplications.\n\n::: columns\n::: {.column width=\"50%\"}\n##### Librairies {{< iconify fa-brands r-project >}}\n\n-   tufte\n-   rticles\n-   revealjs\n-   xaringan\n-   bookdown\n-   blogdown\n-   distill\n:::\n\n::: {.column width=\"50%\"}\n##### Fonctionnalité [(_Terminologie anglaise de la doc_)]{.make-smaller}\n\n-   Floating TOC\n-   Code folding / copying\n-   Syntax highlighting\n-   Page layout\n-   Theming\n-   Tabsets\n-   Section anchors\n:::\n:::\n\nCertaines fonctionnalités et/ou formats nécessitent des libraires R spécifiques et une syntaxe particulière. Avec Quarto, ces fonctionnalités sont intégrées dans le système de base.\n\n## Code folding & bouton de copy\n\n\n\n::: {.cell}\n\n````{.cell-code  code-fold=\"true\"}\n```{{r}}\n#| code-fold: true\n\nlibrary(ggplot2)\ndat <- data.frame(cond = rep(c(\"A\", \"B\"), each=10),\n                  xvar = 1:20 + rnorm(20,sd=3),\n                  yvar = 1:20 + rnorm(20,sd=3))\n\nggplot(dat, aes(x=xvar, y=yvar)) +\n    geom_point(shape=1) + \n    geom_smooth() \n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Tabsets\n\n::: panel-tabset\n#### R\n\n``` r\nfizz_buzz <- function(fbnums = 1:50) {\n  output <- dplyr::case_when(\n    fbnums %% 15 == 0 ~ \"FizzBuzz\",\n    fbnums %% 3 == 0 ~ \"Fizz\",\n    fbnums %% 5 == 0 ~ \"Buzz\",\n    TRUE ~ as.character(fbnums)\n  )\n  print(output)\n}\n```\n\n#### Python\n\n``` python\ndef fizz_buzz(num):\n  if num % 15 == 0:\n    print(\"FizzBuzz\")\n  elif num % 5 == 0:\n    print(\"Buzz\")\n  elif num % 3 == 0:\n    print(\"Fizz\")\n  else:\n    print(num)\n```\n:::\n\n::: {.make-smaller}\nTabset syntax: <https://quarto.org/docs/output-formats/html-basics.html#tabsets>\n:::\n\n##  {visibility=\"hidden\" background-image=\"images/screenshot-tabsets.png\"}\n\n::: {.footer}\n:::\n\n## Appliquer un style avec des thèmes\n\n::: {.make-smaller}\nSystème partagé de création de thèmes (basé sur `.scss` de [SASS](https://sass-lang.com/)) pour tous les formats de sortie HTML (partagé par les diapositives HTML et RevealJS, extensible pour fonctionner plus largement). Basé sur les variables de base définies par [bslib](https://rstudio.github.io/bslib/). ([Exemple de thème Quarto](https://quarto.org/docs/output-formats/html-themes.html#theme-options))\n:::\n\n``` scss\n/*-- scss:defaults --*/\n$h2-font-size:          1.6rem !default;\n$headings-font-weight:  500 !default;\n\n$custom-color: blue;\n\n/*-- scss:rules --*/\nh1, h2, h3, h4, h5, h6 {\n  text-shadow: -1px -1px 0 rgba(0, 0, 0, .3);\n  color: $custom-color;\n}\n```\n\n::: {.notes}\n**bslib** était seulement supporté via les thèmes bootstrap 5 dans `html_document()`\n:::\n\n##  {visibility=\"hidden\" background-image=\"images/screenshot-themes.png\"}\n\n::: {.footer}\n:::\n\n# Nouvelles fonctionnalités\n\n::: {.make-smaller}\n(_Terminologie anglaise de la doc_)\n:::\n\n::: {.columns}\n::: {.column}\n-   Cross references\n-   Advanced page layout\n-   Figure/layout panels\n-   Callouts\n:::\n::: {.column}\n-   Diagrams\n-   Extensions\n-   YAML intelligence\n-   Publishing\n:::\n:::\n\n## Exemple: Les références aux contenus {.smaller}\n\n![](images/crossref-subfigures.png){.illustration fig-align=\"center\"}\n\nPour les figures, tableaux, équations, sections, théorèmes, et même des éléments personnalisés.\n\n-   Avec la syntaxe [markdown brute](https://quarto.org/docs/authoring/cross-references.html#subfigures)\n\n-   Avec les options pour [les cellules éxécutés avec Knitr or Jupyter](https://quarto.org/docs/authoring/cross-references.html#computations)\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-markdown-figures.png\"}\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-knitr-figures.png\"}\n\n::: {.footer}\n:::\n\n## Mise en page avancée\n\nFonctionnalités avancées de mise en page inspirées de Tutfe, Distill et Hugo Prose.\n\n- Figures et tableaux couvrant toute la page\n- Utilisation de marges pour les figures, les équations, les légendes, les apartés, les notes de bas de page et les citations\n- Affichage/masquage réactif de la navigation sur le site et de la table des matières.\n- Exemples : [HTML](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.html), [PDF](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.pdf)\n\n:::  {.notes}\nCliquez sur le lien pour voir l'exemple\n:::\n\n##  {background-image=\"images/screenshot-page-layout.png\" visibility=\"hidden\"}\n\n::: {.footer}\n:::\n\n## Figure/Layout Panels {.smaller}\n\n:::: columns\n\n::: {.column width=\"47%\"}\n- Disposition au choix des figures et des tables (similaire à [cowplot](https://wilkelab.org/cowplot/articles/plot_grid.html) et [patchwork](https://patchwork.data-imaginist.com/))\n- Fonctionne également pour les cellules de code qui produisent des figures et des tableaux. [Exemple](https://quarto.org/docs/authoring/figures.html#computations)\n- Une syntaxe abrégée (`layout-ncol` ou `layout-nrow`) est disponible pour les cas simples.\n- Peut cibler un contenu arbitraire, y compris des équations, des listes à puces, etc.\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"48%\"}\n``` markdown\n::: {layout=\"[[40,-20,40], [100]]\"}\n![Surus](surus.png)\n![Hanno](hanno.png)\n![Lin Wang](lin-wang.png)\n:::\n```\n\n![](images/layout-attrib-negative.png)\n:::\n\n::::\n\n## Callouts {.smaller}\n\nFonctionne dans les différents formats: [HTML](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.html#references), [PDF](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.pdf), MS Word, et ePub\n\n``` markdown\n::: {.callout-note}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, et `important`.\n:::\n```\n\n![](images/callouts.png){width=\"90%\" fig-align=\"center\"}\n\n## Diagrams {.nostretch}\n\nQuarto supporte nativement l'intégration des diagrammes [Mermaid](https://mermaid-js.github.io/mermaid/#/) et [Graphviz](https://graphviz.org/).\n\n\n\n```{mermaid}\n%%| echo: fenced\n%%| output-location: column\nflowchart TD\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]\n```\n\n\n\n## Ajouts de fonctionnalité: Quarto Extensions {.smaller}\n\nListe des extensions existantes à <https://quarto.org/docs/extensions/>\n\n- Les [Shortcodes](https://quarto.org/docs/extensions/shortcodes.html) sont des directives markdown spéciales qui génèrent divers types de contenu. Par exemple, pour intégrer des vidéos dans un document :\n\n  ``` markdown\n  {{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}}\n  ```\n\n- Les [Filtres](https://quarto.org/docs/extensions/filters.html) sont un outil flexible et puissant pour introduire de nouveaux comportements globaux et/ou de nouveaux comportements de rendu du texte. Par exemple,\n\n  ``` yaml\n  filters: [webr]\n  ```\n\n- Les [Formats](https://quarto.org/docs/extensions/formats.html) permettent de créer de nouveaux formats de sortie en regroupant des options de document, des modèles, des feuilles de style et d'autres contenus. Par exemple, un article pour le journal \"Association of Computing Machinery (ACM)\"\n\n  ``` yaml\n  format: acm-pdf\n  ```\n\n## YAML Intelligence {.smaller}\n\nUn ajout important pour l'expérience utilisateur:\n\n- Complétion du code YAML pour les fichiers de configuration, les pages de garde et les options de morceaux\n- Diagnostic en temps réel et suppression des erreurs au moment du rendu en cas de YAML invalide\n\n::: columns\n::: {.column width=\"50%\"}\n#### Completion\n\n![](images/yaml-completion.png){.illustration .lightbox width=\"80%\"}\n:::\n\n::: {.column width=\"50%\"}\n#### Diagnostics\n\n![](images/yaml-diagnostics.png){.illustration .lightbox width=\"80%\"}\n:::\n:::\n\n::: {.footer}\n:::\n\n## Publier ses productions {.smaller}\n\n#### <https://quarto.org/docs/publishing/>\n\nCommande intégrée `quarto publish` qui cible un grand nombre de services:\n\n```{.bash}\n❯ quarto publish -h\n\nUsage:   quarto publish [provider] [path]\nVersion: 99.9.9\n\nDescription:\n\n  Publish a document or project to a provider.\n\n  Available providers include:\n\n   - Quarto Pub (quarto-pub)\n   - GitHub Pages (gh-pages)\n   - Posit Connect (connect)\n   - Posit Cloud (posit-cloud)\n   - Netlify (netlify)\n   - Confluence (confluence)\n   - Hugging Face Spaces (huggingface)\n\n  Accounts are configured interactively during publishing.\n  Manage/remove accounts with: quarto publish accounts\n```\n\n::: {.footer}\n:::\n\n# Advanced Formats\n\n- Sites web (_Website_)\n\n- Livres (_Books_)\n\n- Blogs (_Blogs & Listings_)\n\n- Présentations (_Presentations_)\n\n- Articles de journaux (_Journals Articles_)\n\n## Quarto Websites\n\n:::: columns\n\n::: column\n\n- Profondeur et organisation arbitraires du contenu\n- Navigation à plusieurs niveaux (barre de navigation / barre latérale / hybride)\n- Recherche en texte intégral (côté client ou Algolia)\n- Fonctionnalité de \"gel\" (_freeze_) des contenus exécutés par les moteurs.\n- Exemple : <https://quarto.org> et plus encore dans la [gallerie](https://quarto.org/docs/gallery/#websites)\n\n:::\n\n::: {.column .make-smaller style=\"padding-top: 2em\"}\n```{.yaml filename=\"_quarto.yml (simple website)\"}\nproject:\n  type: website\n\nwebsite:\n  title: \"today\"\n  favicon: logo.png\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: true\n    \nfreeze: auto\n```\n:::\n::::\n\n::: {.footer}\n:::\n\n## Quarto Books\n\n:::: columns\n\n::: column\n\n- Hérite des fonctionnalités des sites web Quarto (navigation, recherche, etc.)\n\n- Prise en charge des références croisées entre les chapitres\n\n- Formats de sorties variés : HTML, PDF, MS Word et ePub.\n\n- Exemples : [Galerie](https://quarto.org/docs/gallery/#books)\n\n:::\n\n::: {.column .make-smaller}\n```{.yaml filename=\"_quarto.yml (simple book)\"}\nproject:\n  type: book\n\nbook:\n  title: \"mybook\"\n  author: \"Jane Doe\"\n  date: \"8/18/2021\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - references.qmd\n\nbibliography: references.bib\n\nformat:\n  html: default\n  pdf: default\n  epub:\n    cover-image: cover.png\n```\n:::\n::::\n\n\n\n##  {background-image=\"images/screenshot-book-hopr.png\"}\n\n::: {.footer}\n:::\n\n##  {visibility=\"hidden\" background-image=\"images/screenshot-book-altair.png\"}\n\n::: {.footer}\n:::\n\n## Quarto Blogs {visibility=\"hidden\"}\n\n:::: columns\n\n::: column\n\n- Hérite des fonctionnalités des sites Quarto (navigation, recherche, etc.)\n\n- Liste et flux RSS générés automatiquement\n\n- Page d'accueil personnalisable\n\n- Exemples : <https://quarto.org/docs/blog/> et plus encore à [Gallery](https://quarto.org/docs/gallery/#websites)\n\n:::\n\n::: {.column .make-smaller}\n```{.yaml filename=\"index.qmd (website with posts/)\"}\n---\ntitle: \"myblog\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n---\n```\n<br> \n```{.yaml filename=\"posts/first-post/index.qmd\"}\n---\ntitle: \"Post With Code\"\ndescription: \"Post description\"\nauthor: \"Fizz McPhee\"\ndate: \"5/22/2021\"\ncategories:\n  - news\n  - code\n---\n```\n:::\n::::\n\n##  {background-image=\"images/screenshot-blog.png\"}\n\n::: {.footer}\n:::\n\n## Quarto Presentations {.smaller}\n\n<https://quarto.org/docs/presentations/revealjs/demo/>\n\n- Basé sur une [version personnalisée]{.hl} de RevealJS :\n    - Arrière-plans d'images, de vidéos et d'iframes\n    - Impression PDF\n    - Vue pour les notes de présentations\n    - Système d'extensions via les \"plugins\" RevealJS\n- De nombreuses fonctionnalités inspirées de [xaringanExtra](https://pkg.garrickadenbuie.com/xaringanExtra/#/?id=xaringanextra) {{< iconify noto package >}} {{< iconify fa-brands r-project >}}:\n    - Tableau noir / dessin sur les diapositives\n    - Multicast (diapositives synchronisées présentateur / spectateur)\n    - Tonalité des diapositives (pour l'accessibilité)\n    - Positionnement absolu des éléments de la diapositive\n\n## Quarto Journals {.smaller}\n\n### <https://quarto.org/docs/journals/>\n\nPossibilité de créer des formats personnalisés conçu pour faciliter la création d'articles destinés à être publiés dans des revues professionnelles :\n\n- La possibilité d'adapter de manière flexible les modèles LaTeX natifs fournis par les revues pour les utiliser avec Pandoc.\n\n- L'utilisation de contenu en ligne et en bloc pour appliquer le formatage (ce qui permet le ciblage par CSS pour la sortie HTML et les macros/environnements LaTeX pour la sortie PDF).\n\n- Un schéma normalisé pour les auteurs et les affiliations afin de pouvoir exprimer ces données une fois pour toutes et qu'elles soient ensuite automatiquement formatées selon les styles requis par les différentes revues.\n\n- L'utilisation du Citation Style Language (CSL) pour automatiser le formatage des citations et des bibliographies selon le style requis par les différentes revues.\n\nExample: <https://quarto-journals.github.io/jss/>\n\n# L'outillage autour de Quarto\n\n- Quarto CLI\n\n- Intégration avec RStudio IDE\n\n- Extension VS Code \n\n- Extension Jupyter Lab\n\n- Support par les éditeurs de texte\n\n- Éditeur visuel (dans RStudio IDE et VS Code)\n\n## Quarto CLI {visibility=\"hidden\"}\n\nComposant central qui gère le rendu de Quarto. C'est la seule chose nécessaire pour rendre du markdown simple (il inclut Pandoc et Typst).\n\n- Ajoutez `knitr` pour rendre les documents avec R\n- Ajoutez `jupyter` pour effectuer le rendu avec les noyaux Jupyter\n- Ajoutez {{< latex >}} pour effectuer le rendu PDF avec LaTeX\n\nComme `git`, c'est un composant de niveau système qui est utilisé par RStudio, VS Code, Jupyter Lab, les sessions de terminal, etc.\n\nTélécharger/installer : <https://quarto.org/docs/get-started/>\n\n## RStudio IDE  {visibility=\"hidden\"}\n\nLa version actuelle de l'IDE RStudio dispose d'une intégration Quarto équivalent à l'intégration R Markdown.\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/new-quarto-doc.png){.illustration}\n:::\n\n::: {.column width=\"50%\"}\n![](images/rstudio-new-knitr-project.png){.illustration}\n:::\n:::\n\n## VS Code Extension {.smaller visibility=\"hidden\"}\n\n<https://quarto.org/docs/tools/vscode.html>\n\n- Commande de rendu avec volet de prévisualisation intégré\n- Mise en évidence de la syntaxe pour les langages markdown et ceux intégrés aux cellules.\n- Complétion pour les langages intégrés (par exemple Python, R, Julia, LaTeX, etc.)\n- Complétion et diagnostics pour les fichiers de projet et les options de document/cellule\n- Complétion pour les citations et les références croisées\n- Commandes et raccourcis clavier pour les cellules en cours d'exécution et les lignes sélectionnées\n- Navigation automatique vers les erreurs de rendu pour Jupyter, Knitr et YAML\n- Prévisualisation en direct des diagrammes mermaid et graphviz intégrés\n- Panneau d'assistance pour l'aide contextuelle, la prévisualisation des images et la prévisualisation des mathématiques\n- Extraits de code pour les constructions markdown courantes\n- Pliage du code et aperçu du document pour la navigation dans les documents\n- Fournisseur de symboles d'espace de travail pour la navigation dans les fichiers du projet\n\n##  {background-image=\"images/screenshot-vscode-preview.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-vscode-r.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n## Jupyter Lab {visibility=\"hidden\"}\n\n![](images/jupyterlab-preview.png)\n\n## Text Editors {visibility=\"hidden\"}\n\n-   Utilisez `quarto preview` avec n'importe quel éditeur de texte :\n\n    ``` {.bash code-line-numbers=\"false\"}\n    $ quarto preview julia.qmd\n    ```\n\n    Rechargement en direct pour les documents et les sites web/livres.\n\n-   Modes Quarto et extensions pour divers éditeurs :\n\n    -   Emacs: <https://github.com/quarto-dev/quarto-emacs>\n    -   Vim: <https://github.com/quarto-dev/quarto-vim>\n    -   Neovim: <https://github.com/jmbuhr/quarto-nvim>\n\n## Visual Editor {visibility=\"hidden\"}\n\n<https://quarto.org/docs/visual-editor/>\n\n- L'éditeur visuel Quarto fournit une interface d'édition WYSIWYM pour l'ensemble de la syntaxe markdown de Pandoc\n\n- Tableaux, citations, références croisées, notes de bas de page, divs/spans, listes de définitions, attributs, HTML/TeX brut, etc.\n\n- Inclut le support pour l'exécution des cellules de code et la visualisation de leur sortie en ligne.\n\n##  {background-image=\"images/screenshot-visual-editor.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-visual-editor-tables.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-visual-editor-equations.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-visual-editor-citations.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n##  {background-image=\"images/screenshot-visual-editor-crossrefs.png\" visibility=\"hidden\" }\n\n::: {.footer}\n:::\n\n## Learning More {.smaller}\n\n#### Slides: <https://cderv.github.io/2024-quarto-evolution-rmd> {.bottom-pad}\n\n-   Bien démarrer: <https://quarto.org/docs/get-started/>\n\n-   Guide utilisateur: <https://quarto.org/docs/guide/>\n\n-   Découverte de l'écosystème: <https://github.com/mcanouil/awesome-quarto>\n\n-   Présentation existantes:\n\n    -   [Keynote: Reimagine + Collaborate + Share with Quarto](https://www.rstudio.com/conference/2022/keynotes/collaborate-with-quarto/)\n    -   [Quarto for R Markdown users](https://www.rstudio.com/conference/2022/talks/quarto-for-rmarkdown-users/)\n    -   [These are a few of my favorite things (about Quarto presentations)](https://www.rstudio.com/conference/2022/talks/my-favorite-things-quarto-presentations/)\n    -   [Literate Programming With Jupyter Notebooks and Quarto](https://www.rstudio.com/conference/2022/talks/literate-programming-quarto/)\n    -   [Websites & Books & Blogs, oh my! Creating Rich Content with Quarto](https://www.rstudio.com/conference/2022/talks/sessions/quarto-deep-dive/websites-books-blogs-quarto/)\n\n#### Questions? {.top-pad}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}